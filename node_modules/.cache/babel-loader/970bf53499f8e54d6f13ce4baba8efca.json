{"ast":null,"code":"const url = require(\"url\");\n\nconst template = require(\"nba-client-template\");\n\nconst HEADERS = {\n  \"Accept-Encoding\": \"gzip, deflate\",\n  \"Accept-Language\": \"en-US\",\n  Accept: \"*/*\",\n  \"User-Agent\": template.user_agent,\n  Referer: template.referrer,\n  Connection: \"keep-alive\",\n  \"Cache-Control\": \"no-cache\",\n  Origin: \"http://stats.nba.com\"\n};\n\nfunction createUrlString(_url, query) {\n  const urlObj = url.parse(_url);\n  urlObj.query = query;\n  return urlObj.format();\n}\n\nfunction createGetJson() {\n  const fetch = require(\"node-fetch\");\n\n  return function getJson(_url, query, _options = {}) {\n    const urlStr = createUrlString(_url, query);\n    const options = Object.assign({}, _options);\n    options.headers = Object.assign(options.headers || {}, HEADERS);\n    return fetch(urlStr, options).then(resp => {\n      if (resp.ok) return resp.json();\n      return resp.text().then(function (text) {\n        throw new Error(`${resp.status} ${resp.statusText} – ${text}`);\n      });\n    });\n  };\n}\n\nfunction createGetJsonp() {\n  const jsonp = require(\"jsonp\");\n\n  return function getJsonp(_url, query, options = {}) {\n    return new Promise(function (resolve, reject) {\n      const urlStr = createUrlString(_url, query);\n      jsonp(urlStr, {\n        timeout: options.timeout\n      }, function (err, data) {\n        // for compatibility with timeouts from request module\n        if (err && err.message === \"Timeout\") err.code = \"ETIMEDOUT\";\n        if (err) return reject(err);\n        return resolve(data);\n      });\n    });\n  };\n}\n\nmodule.exports = typeof window === \"undefined\" ? createGetJson() : createGetJsonp();","map":{"version":3,"sources":["/Users/liulu/Desktop/Projects/Laioffer/NBA/nba-web/node_modules/nba/src/get-json.js"],"names":["url","require","template","HEADERS","Accept","user_agent","Referer","referrer","Connection","Origin","createUrlString","_url","query","urlObj","parse","format","createGetJson","fetch","getJson","_options","urlStr","options","Object","assign","headers","then","resp","ok","json","text","Error","status","statusText","createGetJsonp","jsonp","getJsonp","Promise","resolve","reject","timeout","err","data","message","code","module","exports","window"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AAEA,MAAME,OAAO,GAAG;AACd,qBAAmB,eADL;AAEd,qBAAmB,OAFL;AAGdC,EAAAA,MAAM,EAAE,KAHM;AAId,gBAAcF,QAAQ,CAACG,UAJT;AAKdC,EAAAA,OAAO,EAAEJ,QAAQ,CAACK,QALJ;AAMdC,EAAAA,UAAU,EAAE,YANE;AAOd,mBAAiB,UAPH;AAQdC,EAAAA,MAAM,EAAE;AARM,CAAhB;;AAWA,SAASC,eAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuC;AACrC,QAAMC,MAAM,GAAGb,GAAG,CAACc,KAAJ,CAAUH,IAAV,CAAf;AACAE,EAAAA,MAAM,CAACD,KAAP,GAAeA,KAAf;AACA,SAAOC,MAAM,CAACE,MAAP,EAAP;AACD;;AAED,SAASC,aAAT,GAA0B;AACxB,QAAMC,KAAK,GAAGhB,OAAO,CAAC,YAAD,CAArB;;AAEA,SAAO,SAASiB,OAAT,CAAkBP,IAAlB,EAAwBC,KAAxB,EAA+BO,QAAQ,GAAG,EAA1C,EAA8C;AACnD,UAAMC,MAAM,GAAGV,eAAe,CAACC,IAAD,EAAOC,KAAP,CAA9B;AAEA,UAAMS,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,QAAlB,CAAhB;AACAE,IAAAA,OAAO,CAACG,OAAR,GAAkBF,MAAM,CAACC,MAAP,CAAeF,OAAO,CAACG,OAAR,IAAmB,EAAlC,EAAuCrB,OAAvC,CAAlB;AAEA,WAAOc,KAAK,CAACG,MAAD,EAASC,OAAT,CAAL,CACJI,IADI,CACCC,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,EAAT,EAAa,OAAOD,IAAI,CAACE,IAAL,EAAP;AAEb,aAAOF,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAiB,UAAUI,IAAV,EAAgB;AACtC,cAAM,IAAIC,KAAJ,CAAW,GAAEJ,IAAI,CAACK,MAAO,IAAGL,IAAI,CAACM,UAAW,MAAKH,IAAK,EAAtD,CAAN;AACD,OAFM,CAAP;AAGD,KAPI,CAAP;AAQD,GAdD;AAeD;;AAED,SAASI,cAAT,GAA2B;AACzB,QAAMC,KAAK,GAAGjC,OAAO,CAAC,OAAD,CAArB;;AAEA,SAAO,SAASkC,QAAT,CAAmBxB,IAAnB,EAAyBC,KAAzB,EAAgCS,OAAO,GAAG,EAA1C,EAA8C;AACnD,WAAO,IAAIe,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,YAAMlB,MAAM,GAAGV,eAAe,CAACC,IAAD,EAAOC,KAAP,CAA9B;AAEAsB,MAAAA,KAAK,CAACd,MAAD,EAAS;AAACmB,QAAAA,OAAO,EAAElB,OAAO,CAACkB;AAAlB,OAAT,EAAqC,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAC7D;AACA,YAAID,GAAG,IAAIA,GAAG,CAACE,OAAJ,KAAgB,SAA3B,EAAsCF,GAAG,CAACG,IAAJ,GAAW,WAAX;AACtC,YAAIH,GAAJ,EAAS,OAAOF,MAAM,CAACE,GAAD,CAAb;AACT,eAAOH,OAAO,CAACI,IAAD,CAAd;AACD,OALI,CAAL;AAMD,KATM,CAAP;AAUD,GAXD;AAYD;;AAEDG,MAAM,CAACC,OAAP,GAAiB,OAAOC,MAAP,KAAkB,WAAlB,GACf9B,aAAa,EADE,GACGiB,cAAc,EADlC","sourcesContent":["const url = require(\"url\");\nconst template = require(\"nba-client-template\");\n\nconst HEADERS = {\n  \"Accept-Encoding\": \"gzip, deflate\",\n  \"Accept-Language\": \"en-US\",\n  Accept: \"*/*\",\n  \"User-Agent\": template.user_agent,\n  Referer: template.referrer,\n  Connection: \"keep-alive\",\n  \"Cache-Control\": \"no-cache\",\n  Origin: \"http://stats.nba.com\",\n};\n\nfunction createUrlString (_url, query) {\n  const urlObj = url.parse(_url);\n  urlObj.query = query;\n  return urlObj.format();\n}\n\nfunction createGetJson () {\n  const fetch = require(\"node-fetch\");\n\n  return function getJson (_url, query, _options = {}) {\n    const urlStr = createUrlString(_url, query);\n\n    const options = Object.assign({}, _options);\n    options.headers = Object.assign((options.headers || {}), HEADERS);\n\n    return fetch(urlStr, options)\n      .then(resp => {\n        if (resp.ok) return resp.json();\n\n        return resp.text().then(function (text) {\n          throw new Error(`${resp.status} ${resp.statusText} – ${text}`);\n        });\n      });\n  };\n}\n\nfunction createGetJsonp () {\n  const jsonp = require(\"jsonp\");\n\n  return function getJsonp (_url, query, options = {}) {\n    return new Promise(function (resolve, reject) {\n      const urlStr = createUrlString(_url, query);\n\n      jsonp(urlStr, {timeout: options.timeout}, function (err, data) {\n        // for compatibility with timeouts from request module\n        if (err && err.message === \"Timeout\") err.code = \"ETIMEDOUT\";\n        if (err) return reject(err);\n        return resolve(data);\n      });\n    });\n  };\n}\n\nmodule.exports = typeof window === \"undefined\" ?\n  createGetJson() : createGetJsonp();\n"]},"metadata":{},"sourceType":"script"}