{"ast":null,"code":"var _jsxFileName = \"/Users/liulu/Desktop/Projects/Laioffer/NBA/nba-web/src/components/SearchBar.js\";\nimport React, { Component } from 'react';\nimport { AutoComplete, Input, Icon } from 'antd';\nimport nba from '../nba-client';\nimport { PROFILE_PIC_URL_PREFIX } from '../constants'; // get the option from the autoComplete\n\nconst {\n  Option\n} = AutoComplete.Option;\n\nclass SearchBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataSource: []\n    };\n\n    this.handleSearch = value => {\n      // const players = nba.searchPlayers(value);\n      // console.log(players);\n      this.setState({\n        dataSource: !value ? // 对数组进行遍历，用map\n        // map里是callback function\n        [] : nba.searchPlayers(value).map(player => ({\n          fullName: player.fullName,\n          playerId: player.playerId\n        }))\n      });\n    };\n\n    this.onSelect = name => {\n      this.props.handleSelectPlayer(name);\n    };\n  }\n\n  render() {\n    // 对数据dataSource进行解构\n    const {\n      dataSource\n    } = this.state; // option list dropdown box\n    // img alt: 如果图片不存在显示full name\n\n    const options = dataSource.map(player => /*#__PURE__*/React.createElement(Option, {\n      key: player.playerId,\n      value: player.fullName,\n      className: \"player-option\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"player-option-image\",\n      src: `${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`,\n      alt: player.fullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"player-option-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, player.fullName)));\n    return (\n      /*#__PURE__*/\n      // antd的组件\n      React.createElement(AutoComplete, {\n        className: \"search-bar\",\n        dataSource: options,\n        onSelect: this.onSelect // 数据的搜索通过onSearch API实现，双向绑定\n        ,\n        onSearch: this.handleSearch // searchBar的提示内容\n        ,\n        placeholder: \"Search NBA Player\",\n        size: \"large\" // 必须对应 Option里的\n        ,\n        optionLabelProp: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        suffix: /*#__PURE__*/React.createElement(Icon, {\n          type: \"search\",\n          className: \"certain-category-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }))\n    );\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/liulu/Desktop/Projects/Laioffer/NBA/nba-web/src/components/SearchBar.js"],"names":["React","Component","AutoComplete","Input","Icon","nba","PROFILE_PIC_URL_PREFIX","Option","SearchBar","state","dataSource","handleSearch","value","setState","searchPlayers","map","player","fullName","playerId","onSelect","name","props","handleSelectPlayer","render","options"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,EAAsBC,KAAtB,EAA6BC,IAA7B,QAAwC,MAAxC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAAQC,sBAAR,QAAqC,cAArC,C,CACA;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaL,YAAY,CAACK,MAAhC;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BQ,KAF8B,GAEtB;AACJC,MAAAA,UAAU,EAAE;AADR,KAFsB;;AAAA,SAM9BC,YAN8B,GAMdC,KAAD,IAAW;AACtB;AACA;AAEA,WAAKC,QAAL,CAAc;AACVH,QAAAA,UAAU,EAAE,CAACE,KAAD,GACR;AACA;AACA,UAHQ,GAGHP,GAAG,CAACS,aAAJ,CAAkBF,KAAlB,EACAG,GADA,CACIC,MAAM,KAAK;AACZC,UAAAA,QAAQ,EAAED,MAAM,CAACC,QADL;AAEZC,UAAAA,QAAQ,EAAEF,MAAM,CAACE;AAFL,SAAL,CADV;AAJC,OAAd;AAUH,KApB6B;;AAAA,SAsB9BC,QAtB8B,GAsBlBC,IAAD,IAAU;AACjB,WAAKC,KAAL,CAAWC,kBAAX,CAA8BF,IAA9B;AACH,KAxB6B;AAAA;;AA2B9BG,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAAEb,MAAAA;AAAF,QAAiB,KAAKD,KAA5B,CAFK,CAGL;AACA;;AACA,UAAMe,OAAO,GAAGd,UAAU,CAACK,GAAX,CAAgBC,MAAD,iBAC3B,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACE,QAApB;AACQ,MAAA,KAAK,EAAEF,MAAM,CAACC,QADtB;AAEQ,MAAA,SAAS,EAAC,eAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,GAAG,EAAG,GAAEX,sBAAuB,IAAGU,MAAM,CAACE,QAAS,MAAvF;AAA8F,MAAA,GAAG,EAAEF,MAAM,CAACC,QAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCD,MAAM,CAACC,QAA9C,CAJJ,CADY,CAAhB;AAQA;AAAA;AACI;AACA,0BAAC,YAAD;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,UAAU,EAAEO,OAFhB;AAGI,QAAA,QAAQ,EAAE,KAAKL,QAHnB,CAII;AAJJ;AAKI,QAAA,QAAQ,EAAE,KAAKR,YALnB,CAMI;AANJ;AAOI,QAAA,WAAW,EAAC,mBAPhB;AAQI,QAAA,IAAI,EAAC,OART,CASI;AATJ;AAUI,QAAA,eAAe,EAAC,OAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAYI,oBAAC,KAAD;AAAO,QAAA,MAAM,eAAE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,QAAX;AAAoB,UAAA,SAAS,EAAC,uBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ;AAFJ;AAiBH;;AAzD6B;;AA6DlC,eAAeH,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport {AutoComplete, Input, Icon} from 'antd';\nimport nba from '../nba-client';\nimport {PROFILE_PIC_URL_PREFIX} from '../constants';\n// get the option from the autoComplete\nconst { Option } = AutoComplete.Option;\n\nclass SearchBar extends Component {\n\n    state = {\n        dataSource: [],\n    }\n\n    handleSearch = (value) => {\n        // const players = nba.searchPlayers(value);\n        // console.log(players);\n\n        this.setState({\n            dataSource: !value ?\n                // 对数组进行遍历，用map\n                // map里是callback function\n                [] : nba.searchPlayers(value)\n                    .map(player => ({\n                        fullName: player.fullName,\n                        playerId: player.playerId,\n                    }))\n        });\n    }\n    // 回传数据给main\n    onSelect = (name) => {\n        this.props.handleSelectPlayer(name);\n    }\n\n\n    render() {\n        // 对数据dataSource进行解构\n        const { dataSource } = this.state;\n        // option list dropdown box\n        // img alt: 如果图片不存在显示full name\n        const options = dataSource.map((player) => (\n            <Option key={player.playerId}\n                    value={player.fullName}\n                    className=\"player-option\">\n                <img className=\"player-option-image\" src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`} alt={player.fullName}/>\n                <span className=\"player-option-label\">{player.fullName}</span>\n            </Option>\n        ));\n        return (\n            // antd的组件\n            <AutoComplete\n                className=\"search-bar\"\n                dataSource={options}\n                onSelect={this.onSelect}\n                // 数据的搜索通过onSearch API实现，双向绑定\n                onSearch={this.handleSearch}\n                // searchBar的提示内容\n                placeholder=\"Search NBA Player\"\n                size=\"large\"\n                // 必须对应 Option里的\n                optionLabelProp=\"value\"\n            >\n                <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\"/>}/>\n            </AutoComplete>\n        );\n    }\n\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}